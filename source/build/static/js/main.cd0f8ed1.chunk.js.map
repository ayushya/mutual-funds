{"version":3,"sources":["images/back.svg","utils/initialData.js","components/CardItem.js","components/FundIntro.js","components/Loading.js","components/FundDetails.js","components/Content.js","App.js","index.js"],"names":["module","exports","fetchData","url","a","fetch","then","response","status","json","catch","error","console","getAllFunds","setData","data","getFundDetails","code","CardItem","className","this","props","label","value","React","PureComponent","FundIntro","fund","name","fund_type","fund_category","returns","inception","year_1","year_3","year_5","volatility","onClick","undefined","toFixed","Loading","FundDetails","stateKey","setState","state","fundDetails","src","backArrow","alt","handleBackButton","Content","handleOpenFundDetails","newValue","openedFund","handleUpdateFilter","key","handleChangePlan","plan","pagesLoaded","search","category","subCategory","sortBy","growth","dividend","filteredFundsBySearch","allFunds","filter","toLowerCase","indexOf","filteredFundsByPlan","sortedFunds","sort","fundA","fundB","valueOrNegativeInfinity","Infinity","filteredFundsByCategory","subCategories","reduce","prev","curr","filteredFunds","FormControl","variant","TextField","id","onChange","e","target","FormControlLabel","control","Checkbox","checked","color","InputLabel","Select","labelId","MenuItem","Object","keys","map","val","index","pageStart","loadMore","setTimeout","hasMore","loader","slice","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd0f8ed1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.841cd051.svg\";","const fetchData = async (url) => {\n  return await fetch(url)\n  .then((response) => {\n    if (response.status === 200) {\n      return response.json();\n    }\n  })\n  .then((response) => response)\n  .catch((error) => {\n    console.error(error);\n  })\n}\n\nexport const getAllFunds = async (setData) => {\n  const data = await fetchData('https://api.kuvera.in/api/v3/funds.json');\n  setData('allFunds', data);\n}\n\nexport const getFundDetails = async (code, setData) => {\n  const data = await fetchData(`https://api.kuvera.in/api/v3/funds/${code}.json`);\n  setData('fundDetails', data);\n}\n","import React from 'react';\n\nexport default class CardItem extends React.PureComponent {\n  render () {\n    return (\n      <div className=\"card-item\">\n        <div className=\"card-item-container\">\n          <div className=\"card-item-label\">\n            {this.props.label}\n          </div>\n          <div className=\"card-item-content\">\n            {this.props.value}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport '../styles/FundIntro.css';\nimport CardItem from './CardItem';\n\nexport default class FundIntro extends React.PureComponent {\n  render() {\n    const {\n      name,\n      fund_type,\n      fund_category,\n      returns: {\n        inception,\n        year_1,\n        year_3,\n        year_5,\n      },\n      volatility,\n    } = this.props.fund;\n\n    return (\n      <div\n        className=\"fund-list card\"\n        onClick={() => this.props.onClick()}\n      >\n        <h3 className=\"fund-title inline-block\">\n          {name}\n        </h3>\n\n        <div className=\"fund-category\">\n          {`${fund_type ? fund_type : ''}${fund_type && fund_category ? ' Â· ' : ''}${fund_category ? fund_category : ''}`}\n        </div>\n\n        <h4 className=\"fund-title\">\n          Past Performance\n        </h4>\n        <CardItem\n          label=\"SINCE LAUNCH (SL)\"\n          value={inception !== undefined ? `${inception.toFixed(1)}%` : 'NA'}\n        />\n        <CardItem\n          label=\"1Y Return\"\n          value={year_1 !== undefined ? `${year_1.toFixed(1)}%` : 'NA'}\n        />\n        <CardItem\n          label=\"3Y Return\"\n          value={year_3 !== undefined ? `${year_3.toFixed(1)}%`: 'NA'}\n        />\n        <CardItem\n          label=\"5Y Return\"\n          value={year_5 !== undefined ? `${year_5.toFixed(1)}%` : 'NA'}\n        />\n        <CardItem\n          label=\"Volatility (Vol)\"\n          value={volatility !== undefined ? `${volatility.toFixed(1)}%`: 'NA'}\n        />\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Loading extends React.PureComponent {\n  render () {\n    return (\n      <div className=\"loader\" />\n    )\n  }\n}","import React from 'react';\n\nimport backArrow from '../images/back.svg';\nimport { getFundDetails } from '../utils/initialData';\nimport Loading from './Loading';\n\nexport default class FundDetails extends React.PureComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n      fundDetails: null,\n    }\n  }\n\n  componentDidMount () {\n    getFundDetails(this.props.fund.code, this.setData);\n  }\n\n  setData = (stateKey, data) => {\n    this.setState({\n      [stateKey]: data,\n    });\n  }\n\n  render () {\n    const {\n      name,\n    } = this.props.fund;\n\n    const {\n      fundDetails,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <img\n          src={backArrow}\n          alt=\"Go back\"\n          className=\"back-button\"\n          onClick={() => this.props.handleBackButton()}\n        />\n        <div className=\"title\">\n          {name}\n        </div>\n\n        {\n          !fundDetails ?\n          <div className=\"push-20\">\n            <Loading />\n          </div> :\n          null\n        }\n      </div>\n    )\n  }\n}","import React from 'react';\nimport FundIntro from './FundIntro';\nimport FundDetails from './FundDetails';\nimport Loading from './Loading';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\nexport default class Content extends React.PureComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n      openedFund: null,\n      pagesLoaded: 1,\n      search: '',\n      category: 'all',\n      subCategory: 'all',\n      sortBy: 'year_3',\n      plan: {\n        growth: true,\n        dividend: false,\n      }\n    }\n  }\n\n  handleOpenFundDetails = (newValue) => {\n    this.setState({\n      openedFund: newValue,\n    })\n  }\n\n  handleUpdateFilter = (key, newValue) => {\n    this.setState({\n      [key]: newValue,\n      pagesLoaded: 1,\n    })\n  }\n\n  handleChangePlan = (key, newValue) => {\n    this.setState({\n      plan: {\n        ...this.state.plan,\n        [key]: newValue,\n      },\n      pagesLoaded: 1,\n    })\n  }\n\n  render () {\n    const filteredFundsBySearch =\n      this.props.allFunds\n      ?.filter((fund) => {\n        if (this.state.search === '') {\n          return true;\n        } else {\n          return fund.name.toLowerCase().indexOf(this.state.search.toLowerCase()) > -1\n        }\n      });\n\n    const filteredFundsByPlan =\n      filteredFundsBySearch\n      ?.filter((fund) => {\n        if ((this.state.plan.growth && fund.plan === 'GROWTH') || (this.state.plan.dividend && (fund.plan === 'DIVIDEND ANNUAL' || fund.plan === null))) {\n          return true;\n        } else if (this.state.plan.growth === this.state.plan.dividend) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n    const sortedFunds =\n      filteredFundsByPlan\n      ?.sort((fundA, fundB) => {\n        const valueOrNegativeInfinity = (value) => value ? value : -Infinity; \n        if (this.state.sortBy === 'volatility') {\n          return valueOrNegativeInfinity(fundA[this.state.sortBy]) - valueOrNegativeInfinity(fundB[this.state.sortBy]);\n        } else {\n          return valueOrNegativeInfinity(fundB['returns'][this.state.sortBy]) - valueOrNegativeInfinity(fundA['returns'][this.state.sortBy]);\n        }\n      });\n\n\n    const filteredFundsByCategory =\n      sortedFunds\n      ?.filter((fund) => {\n        if (this.state.category === 'all') {\n          return true;\n        } else {\n          return fund.fund_type === this.state.category\n        }\n      });\n\n    const subCategories = this.state.category === 'all' ? {} : filteredFundsByCategory?.reduce((prev, curr) => {\n      prev[curr['fund_category']] = true;\n      return prev;\n    }, {});\n\n    const filteredFundsBySubCategory =\n      filteredFundsByCategory\n      ?.filter((fund) => {\n        if (this.state.subCategory === 'all') {\n          return true;\n        } else {\n          return fund.fund_category === this.state.subCategory\n        }\n      });\n\n    const filteredFunds = filteredFundsBySubCategory;\n\n    if (this.state.openedFund) {\n      return (\n        <FundDetails\n          fund={this.state.openedFund}\n          handleBackButton={() => this.handleOpenFundDetails(null)}\n        />\n      )\n    }\n\n    return (\n      <div className=\"container\">\n        <h2 className=\"top-title\">Mutual Funds</h2>\n        {\n          !this.props.allFunds ?\n          <div className=\"push-20\">\n            <Loading />\n          </div> :\n          null\n        }\n        {\n          this.props.allFunds ?\n          <div className=\"filters\">\n            <FormControl variant=\"outlined\" className=\"control-item\">\n              <TextField\n                id=\"outlined-basic-search\"\n                label=\"Search\"\n                variant=\"outlined\"\n                onChange={(e) => this.handleUpdateFilter('search', e.target.value)}\n              />\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className=\"control-item plan-check\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    className=\"checkbox\"\n                    checked={this.state.plan.growth}\n                    onChange={() => this.handleChangePlan('growth', !this.state.plan.growth)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                className=\"checkbox-container\"\n                label={<div className=\"checkbox-label\">Growth</div>}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    className=\"checkbox\"\n                    checked={this.state.plan.dividend}\n                    onChange={() => this.handleChangePlan('dividend', !this.state.plan.dividend)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                className=\"checkbox-container\"\n                label={<div className=\"checkbox-label\">Dividend</div>}\n              />\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className=\"control-item\">\n              <InputLabel id=\"sort-by-label\">Sort By</InputLabel>\n              <Select\n                labelId=\"sort-by-label\"\n                id=\"sort-by\"\n                value={this.state.sortBy}\n                onChange={(e) => this.handleUpdateFilter('sortBy', e.target.value )}\n                label=\"Sort By\"\n              >\n                <MenuItem value={'year_3'}>3 Years</MenuItem>\n                <MenuItem value={'year_5'}>5 Years</MenuItem>\n                <MenuItem value={'year_1'}>1 Year</MenuItem>\n                <MenuItem value={'inception'}>Since Launch (Inception)</MenuItem>\n                <MenuItem value={'volatility'}>Volatility</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className=\"control-item\">\n              <InputLabel id=\"category-label\">Category</InputLabel>\n              <Select\n                labelId=\"category-label\"\n                id=\"category\"\n                value={this.state.category}\n                onChange={(e) => {\n                  this.handleUpdateFilter('category', e.target.value );\n                  this.handleUpdateFilter('subCategory', 'all' );\n                  }}\n                label=\"Category\"\n              >\n                <MenuItem value={'all'}>All</MenuItem>\n                <MenuItem value={'Debt'}>Debt</MenuItem>\n                <MenuItem value={'Equity'}>Equity</MenuItem>\n                <MenuItem value={'Hybrid'}>Hybrid</MenuItem>\n                <MenuItem value={'Others'}>Others</MenuItem>\n                <MenuItem value={'Solution Oriented'}>Solution Oriented</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className=\"control-item\">\n              <InputLabel id=\"sub-category-label\">Sub Category</InputLabel>\n              <Select\n                labelId=\"sub-category-label\"\n                id=\"sub-category\"\n                value={this.state.subCategory}\n                onChange={(e) => this.handleUpdateFilter('subCategory', e.target.value )}\n                label=\"Sub Category\"\n              >\n                <MenuItem value={'all'}>All</MenuItem>\n                {\n                  Object.keys(subCategories).map((val, index) => {\n                    return (\n                      <MenuItem key={index} value={val}>{val}</MenuItem>\n                    )\n                  })\n                }\n              </Select>\n            </FormControl>\n          </div> :\n          null\n        }\n        {\n          this.props.allFunds ?\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={() => {\n              setTimeout(() => {\n                this.setState({\n                pagesLoaded: this.state.pagesLoaded + 1,\n              })\n              }, 500); // This Delay is added to demonstrate the effect that we show a loader and then show the rest of the data\n            }}\n            hasMore={true || false}\n            loader={<div key={this.state.pagesLoaded} className=\"push-20\"><Loading /></div>}\n          >\n            {\n              filteredFunds?.slice(0, this.state.pagesLoaded * 10)\n              .map((fund, index) => {\n                return (\n                  <FundIntro\n                    key={index}\n                    fund={fund}\n                    onClick={() => this.handleOpenFundDetails(fund)}\n                  />\n                )\n              })\n            }\n          </InfiniteScroll> :\n          null\n        }\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './styles/App.css';\n\nimport {\n  getAllFunds,\n} from './utils/initialData';\nimport Content from './components/Content';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      allFunds: null,\n    }\n  }\n\n  componentDidMount () {\n    getAllFunds(this.setData);\n  }\n\n  setData = (stateKey, data) => {\n    this.setState({\n      [stateKey]: data,\n    });\n  }\n\n  render () {\n    return (\n      <Content {...this.state} />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}